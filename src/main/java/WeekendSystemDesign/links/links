http://www.techiedelight.com/Category/heap/
http://massivealgorithms.blogspot.in/2016/10/leetcode-438-find-all-anagrams-in-string.html
https://github.com/mission-peace/interview
https://github.com/sunny88mittal/sunny/tree/master/DistributedComputing/src/main/java/com/zookeeper/masterelection
https://github.com/shawnfan/LintCode
https://github.com/hyfrey/CompetitiveProgramming3Code/tree/master/code/ch1
https://github.com/f13mash/competitive-programming-3/blob/master/src/chap3/dp/knapsack/p10616/Main.java
https://github.com/Anvesh-Patlolla/CompetitiveProgramming/tree/master/Sample/src
https://github.com/yular/CC--InterviewProblem
https://github.com/kamyu104/LintCode
https://github.com/charles-wangkai/hackerrank/tree/master/ctci-array-left-rotation
https://coding-interview-solutions.hackingnote.com/
https://aaronice.gitbooks.io/lintcode/content/graph_search/n_queens.html
https://www.gitbook.com/book/hackingnote/coding-interview-solutions/details
https://read.amazon.com/
http://algorithms.tutorialhorizon.com/find-the-last-repeating-character-in-a-given-string/
https://github.com/dufferzafar/geeks-pdf
http://www.geeksforgeeks.org/fundamentals-of-algorithms/
http://codercareer.blogspot.in/p/dynamic-interview-questions.html
https://play.google.com/books/reader?id=ux3PCwAAQBAJ&printsec=frontcover&pg=GBS.PA457
https://www.educative.io/collection/page/5668639101419520/5649050225344512/5661458385862656
https://www.educative.io/collection/page/5642554087309312/5679846214598656/140001
https://leetcode.com/
http://www.lintcode.com/en/problem/
https://shawnfandev.herokuapp.com/java-algorithm-solutions/
https://algorithm.yuanbin.me/zh-hans/exhaustive_search/permutations_ii.html#example
https://www.hackerearth.com/practice/algorithms/searching/linear-search/tutorial/
https://www.interviewbit.com/dashboard/
http://www.ideserve.co.in/learn/dynamic-programming-interview-questions
https://www.commonlounge.com/discussion/cab62aa236584ae4badc0ab07728d0b9/all/d2c7f1b219d044d4b71f479a9bd8c2f4
https://www.commonlounge.com/discussion/47e7c35e5f574032ab78bc10bfa71ddb
https://docs.google.com/document/d/1_dc3Ifg7Gg1LxhiqMMmE9UbTsXpdRiYh4pKILYG2eA4/edit
http://codeforces.com/blog/entry/23054
http://web.stanford.edu/class/cs97si/
http://www.martystepp.com/acm/
https://algocoding.wordpress.com/2015/04/21/notes-and-courses-for-competitive-programming/
https://codingblocks.com/resources/
https://github.com/izharishaksa/UVa-Solution
hackerrank.com
https://www.zybuluo.com/smilence/note/76
https://zhengyang2015.gitbooks.io/lintcode/random_generator.html
https://docs.google.com/document/d/1_dc3Ifg7Gg1LxhiqMMmE9UbTsXpdRiYh4pKILYG2eA4/edit
http://www.byte-by-byte.com/longestbranch/
http://www.solvertobe.com/
https://halexv.blogspot.com/2015/10/competitive-programming-resources.html
http://spoj-solutions.blogspot.com/
http://spoj-sus.blogspot.com/
http://spoj-solutions-all.blogspot.com/search/label/greedy
http://praveendhinwacoding.blogspot.com/2013/06/700-problems-to-understand-you-complete.html
http://iamayushanand.blogspot.com/p/expression-treesspoj-cmexp.html
http://spojsolutionsimple.blogspot.com/2013/01/edit-distance-again.html
http://shawonruet.blogspot.com/search/label/discrete
http://jiteshsunhala.blogspot.com/
http://wilanw.blogspot.com/2010/06/spoj-assignments-assign.html
http://iamayushanand.blogspot.com/2016/03/sliding-puzzlecodeforces-645a.html
http://bitdevu.blogspot.com/
http://ayurjain.blogspot.com/
http://letuskode.blogspot.com/
http://shipuahamed.com/category/dynamic-programming#
https://www.quora.com/What-is-the-best-strategy-to-improve-my-skills-in-competitive-programming-in-2-3-months/answer/Nishant-Raj-27
http://greedforcode.blogspot.in/2017/03/painter-partition-problem-binary-search.html
https://theefficientcodes.blogspot.com/search/label/dp
https://epmahfuz.blogspot.com/2017/01/solution-of-light-oj-1067-combinations.html
http://csenasim.blogspot.com/2016/07/baker-vai-lightoj-1071.html
http://sumonkantidey.blogspot.com/
http://prantoamt.blogspot.com/2016/04/lightoj-1354-ip-checking-solution.html
http://shahidul-brur.blogspot.com/
http://shakilcompetitiveprogramming.blogspot.com/2013/12/minmax-algorithm.html
http://arif778.blogspot.com/2016/12/uva-1225-digit-countingcpp.html
https://turing13.wordpress.com/category/map/
http://zakilive.com/category/acm/competitive-programming/
http://blog.csdn.net/whyorwhnt/article/category/1303510
http://ojsolver.blogspot.com/2016/04/uva-10566-lightoj-1062-crossed-ladders.html
http://lbv-pc.blogspot.com/search/label/dynamic%20programming
http://shipuahamed.com/2014/09/lightoj-1183-computing-fast-average.html
http://isolvedaproblem.blogspot.com/
http://ayurjain.blogspot.com/2016/10/dynamic-programming.html
http://vkundeti.blogspot.com/2017/07/a-matrix-formulation-of-extended-euclid.html
https://allaboutalgorithms.wordpress.com/
http://algorithms-live.blogspot.com/2016/12/episode-0-fenwick-trees.html
http://ms-amazon.blogspot.com/p/dynamic-programming.html
http://crsriharsha.blogspot.com/2013/05/minimum-spanning-of-multistage-graph.html
http://code-stream.blogspot.com/
http://k2code.blogspot.in/search/label/object-oriented-design%20%2F%20OOD
http://geekyisawesome.blogspot.com/2014/11/dijkstras-algorithm-and-search-graph.html
http://shakilcompetitiveprogramming.blogspot.com/
https://loveforprogramming.quora.com/Backtracking-Memoization-Dynamic-Programming
http://www.stoimen.com/blog/2012/10/15/computer-algorithms-dijkstra-shortest-path-in-a-graph/
https://solveit.quora.com/Flows-cuts-and-matchings
http://zobayer.blogspot.com/2013/12/spoj-queen.html
http://javabypatel.blogspot.in/2016/09/java-multithreading-interview-questions-answers.html
http://javapuneet.blogspot.com/2014/10/multithreading-with-java.html
http://java-latte.blogspot.com/p/concurrency.html
http://javabypatel.blogspot.in/2016/09/java-multithreading-interview-questions-answers.html
http://makemobiapps.blogspot.com/p/multiple-client-server-chat-programming.html
http://javarevisited.blogspot.com/2015/06/how-to-create-http-server-in-java-serversocket-example.html
https://tianrunhe.wordpress.com/category/questions-from-careercup/page/5/
http://praveendhinwacoding.blogspot.com/2013/12/sliding-minimum-problem.html
http://tech-queries.blogspot.com/search/label/Dynamic%20programming
http://sk765.blogspot.com/search/label/Codeforces%20Round%20%23106
http://rafal-jozefowicz.blogspot.com/2009/12/dynamic-programing-basics.html
http://zke1ev3n.me/2016/09/13/Algorithm-Dynamic-Programming/
http://dynamicallyinvokable.blogspot.com/2016/10/dynamic-programming-in-5-easy-steps.html
http://exceptional-code.blogspot.com/2012/02/solving-boggle-game-recursion-prefix.html
https://apps.topcoder.com/forums/?module=Thread&start=0&threadID=697369
http://thefourtheye.in/blog/categories/dynamic-programming/
http://codeforces.com/blog/entry/10961
https://stackoverflow.com/questions/22394257/how-to-count-integers-between-large-a-and-b-with-a-certain-property/22394258#22394258
http://www.mathblog.dk/tag/dynamic-programming/
http://codercareer.blogspot.com/p/dynamic-interview-questions.html
http://codeforces.com/blog/entry/337
http://codeforces.com/blog/entry/43256
http://codeforces.com/blog/entry/16221
http://codeforces.com/blog/entry/3075
http://codeforces.com/blog/entry/17974
http://codeforces.com/blog/entry/13529
https://codefights.com/interview-practice
https://csacademy.com/
https://www.quora.com/topic/Programming-Interview-Questions
http://srikantpadala.com/blog/hackerrank-solutions/
prismoskills.appspot.com/lessons/Dynamic_Programming/Chapter_19_-_Largest_sum_contiguous_subarray.jsp
http://www.sanfoundry.com/dynamic-programming-solutions-assembly-line-scheduling/
https://www.codingninjas.in/app/category/7/topic/17
zke1ev3n.me/2016/09/13/Algorithm-Dynamic-Programming/
https://artofproblemsolving.com/community/c1184h1015642_dynamic_programming_resources
http://dynamic-programming.blogspot.in/
http://my-zhang.github.io/blog/2014/04/20/dynamic-programming-with-bitmask/
https://www.ugrad.cs.ubc.ca/~cs490/sec202/notes/dp/DP%202.pdf
https://github.com/cormacpayne/Data-Structures-and-Algorithms/blob/master/Notes/Graph-Theory.md
https://github.com/AhmadElsagheer/Competitive-programming-library
https://github.com/hkirat/Algorithmic-Resources
https://cses.fi/book.pdf
https://github.com/SuprDewd
http://www.csc.kth.se/~jsannemo/slask/main.pdf
https://github.com/donnemartin/coding-interview-university
https://github.com/sherxon/system-design-primer
https://github.com/sherxon/AlgoDS
https://github.com/sherxon/awesome-interview-questions
https://github.com/sherxon/AlgorithmsSedgewick
https://github.com/sherxon/awesome-java#distributed-applications
https://algo.is/
https://github.com/jluisfgarza/algorithms
https://github.com/SuprDewd/CompetitiveProgramming/tree/master/code/geometry
https://github.com/AlgoWiki/AlgoWiki
http://nbviewer.jupyter.org/github/donnemartin/interactive-coding-challenges/blob/master/arrays_strings/unique_chars/unique_chars_solution.ipynb#
https://www.quora.com/How-and-what-should-I-prepare-for-interviews-at-big-companies-like-Google-and-Amazon
http://problemvault.com/index.php
https://algorithm.yuanbin.me/zh-hans/dynamic_programming/jump_game_ii.html
http://interactivepython.org/courselib/static/pythonds/Recursion/toctree.html
https://web.stanford.edu/class/cs97si/
https://github.com/rfaisal/hellouniverse/tree/master/Java/src
http://yuanhsh.iteye.com/
https://github.com/cormacpayne/Data-Structures-and-Algorithms
https://zhengyang2015.gitbooks.io/lintcode/minimum_adjustment_cost_91.html
https://lefttree.gitbooks.io/leetcode/dynamicProgramming2/minimumAdjustmentCost.html
https://algorithm.yuanbin.me/en/
http://blog.hackerearth.com/2015/05/top-7-algorithms-and-data-structures-every-programmer-should-know-about.html
http://codeanytime.blogspot.in/2014/12/lintcode-k-sum.html
http://buttercola.blogspot.in/search/label/Leetcode
https://zhengyang2015.gitbooks.io/lintcode/word_search_ii_132.html
http://codeanytime.blogspot.in/2014/12/lintcode-k-sum.html
http://www.jasonjson.com/
https://codesolutiony.wordpress.com/
http://ryanleetcode.blogspot.in/
http://cherylintcode.blogspot.in/2015/07/expression-evaluation.html
http://ying.ninja/
https://www.gitbook.com/book/hackingnote/coding-interview-solutions/details
https://kennyzhuang.gitbooks.io/algorithms-collection/content/burst_balloons.html
www.zrzahid.com/
http://www.acmerblog.com/
https://soulmachine.gitbooks.io/system-design/content/cn/bigdata/range-query.html
https://soulmachine.gitbooks.io/algorithm-essentials/content/java/linear-list/array/next-permutation.html
http://fisherlei.blogspot.in/
http://howtodoinjava.com/java-concurrency-tutorial/
https://jingjingshao.gitbooks.io/data-structure-and-algorithm-analysis/content/.String/14%20Longest%20Common%20Prefix_String.html
https://www.gitbook.com/book/aaronice/lintcode/details
https://rahulravindran0108.gitbooks.io/leetcode-gitbook/dp/combination_sum_4.html
http://yuanhsh.iteye.com/blog/2190988
https://apps.topcoder.com/forums/?module=Thread&threadID=697925&start=0
https://apps.topcoder.com/forums/?module=Thread&threadID=696934&mc=4
https://apps.topcoder.com/forums/?module=Thread&threadID=700080&start=0
https://kennyzhuang.gitbooks.io/algorithms-collection/content/search_in_rotated_sorted_array_with_duplicates.html
https://zhengyang2015.gitbooks.io/lintcode/random_generator.html
http://massiveprogramming.blogspot.in/
http://www.jianshu.com/p/3f8ada396b9f
http://www.lintcode.com/en/problem/#
http://juliachencoding.blogspot.in/
http://massivealgorithms.blogspot.in/p/resources.html
http://codingrecipies.blogspot.in/
http://www.crazyforcode.com/count-pairs-numbers-difference/
http://shibaili.blogspot.in/
http://yucoding.blogspot.in/2017_04_01_archive.html  //best
https://sites.google.com/site/mytechnicalcollection/algorithms/dynamic-programming/word-wrap-problem
http://wilanw.blogspot.in/search?updated-max=2010-01-25T14:57:00%2B11:00&max-results=7
http://rleetcode.blogspot.in/
http://www.chenguanghe.com/tag/bit-manitupulation/
http://www.params.me/p/training-and-professional-guidance.html
http://everydaylearnsalittlebit.blogspot.in/
http://blog.csdn.net/kenden23/article/details/41820817
http://wilanw.blogspot.in/search?updated-max=2010-01-25T14:57:00%2B11:00&max-results=7
https://tianrunhe.wordpress.com/tag/object-oriented-design/page/2/
http://letuscode.in/index.php/category/dynamic-programming/
http://leetcode0.blogspot.in/2017/01/352-data-stream-as-disjoint-intervals.html
http://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/
https://www.martinkysel.com/codility-solutions/
https://sites.google.com/site/indy256/algo/meet-in-the-middle
http://codingrecipies.blogspot.in/
http://www.codebytes.in/2017/07/spoj-ecconb-solution-ad-hoc.html
https://www.interviewcake.com/article/python/data-structures-coding-interview
http://acm.nudt.edu.cn/~twcourse/
http://k2code.blogspot.in/search/label/object-oriented-design%20%2F%20OOD
https://shawnlincoding.wordpress.com/page/2/
http://qingtangpaomian.iteye.com/
http://xuyuanda.blogspot.in/2015/08/047-permutations-ii.html
http://www.growingwiththeweb.com/2013/06/algorithm-all-combinations-of-set.html
http://www.cnblogs.com/tonix/category/607342.html
http://interviewpractise.blogspot.in/2013/01/pots-of-gold.html
http://www.cnblogs.com/jcliBlogger/p/4783051.html //nice
http://www.cnblogs.com/easonliu/p/6689639.html
http://techieme.in/fastest-reach-in-snakes-and-ladders/  // nice
https://algorithmsandme.in/2014/03/15/heaps-sliding-window-algorithm/
http://algorithms.tutorialhorizon.com/
http://wilanw.blogspot.in/search/label/bitmask
https://asanchina.wordpress.com/2016/03/02/2156-minimum-cost/   // nice
http://blog.csdn.net/SunnyYoona/article/category/1785407/1
https://github.com/checkcheckzz/system-design-interview
https://www.sigmainfy.com/blog/leetcode-handbook-all-problem-solution-index.html   // really nice nice
http://www.cnblogs.com/EdwardLiu/p/4346139.html  // really nice nice
http://traceformula.blogspot.in/p/leetcode.html
http://blog.csdn.net/Niko_Ke/article/details/52074956
http://blog.csdn.net/SunnyYoona/article/category/2223871
http://elementsofprogramminginterviews.com/solutions/
https://github.com/careercup/CtCI-6th-Edition/tree/master/Java
https://github.com/gardncl/elements-of-programming-interviews
https://github.com/qtstc/Elements-of-Programming-Interviews-Java-Solution/tree/master/src
http://www.iarcs.org.in/inoi/online-study-material/problems/toll-roads-soln.php#solution
https://community.topcoder.com/tc?module=ProblemArchive&sr=101&er=150&sc=7&sd=desc&class=&cat=Dynamic+Programming&div1l=&div2l=3&mind1s=&mind2s=&maxd1s=&maxd2s=&wr=
https://github.com/careercup/CtCI-6th-Edition/tree/master/Java
https://github.com/adnanaziz/epicode/tree/master/java/src/main/java/com/epi
https://github.com/gardncl/elements-of-programming-interviews
https://docs.google.com/spreadsheets/d/1tLEm58_2bQgM7qhATSjN0fGbdLLtaOCjUFnTGniHbjI/edit#gid=0
https://docs.google.com/spreadsheets/d/1blSbPr1pAFZSzlAi2IVdTeytz2yO7Ejx9SeQWOSxY0w/edit#gid=1470895937
https://github.com/AhmadElsagheer/Competitive-programming-library  // must
https://github.com/AhmadElsagheer/UVa-Solutions
https://github.com/AhmadElsagheer/El-Chat
http://www.questtosolve.com/search.php
http://www.dsalgo.com/2013/02/index.php.html
http://web.stanford.edu/class/cs97si/
https://sites.google.com/site/stevenhalim/home/material
https://docs.google.com/spreadsheets/d/1tLEm58_2bQgM7qhATSjN0fGbdLLtaOCjUFnTGniHbjI/edit#gid=0
https://github.com/sarvex/interview-1/tree/master/src/com/interview/books/leetcode
https://github.com/sarvex/interview-1/blob/master/src/com/interview/books/LargeScale.md /// really nice
https://github.com/sarvex/interview-1
http://articles.leetcode.com
https://github.com/sarvex/interview
https://github.com/sarvex/interview-java
https://github.com/sarvex/interviewjam
https://github.com/sarvex/Interview-4
https://github.com/sarvex/coding-questions
https://github.com/sarvex/Interview-4/tree/master/Heap
https://www.hackerearth.com/practice/notes/system-design-and-memory-limits-design-a-data-structure-for-a-very-large-social-network-facebook-linkedin-etc/
https://github.com/shashank88/system_design#basics
https://github.com/FreemanZhang/system-design
https://github.com/FreemanZhang/leetcode
https://github.com/shashank88/system_design#howtoans
http://wxx5433.github.io/tag/two-pointer.html
http://lianlu.github.io/tags/algorithm/
https://github.com/lianlu/LeetcodeNewQuestions
https://github.com/lianlu/LeetcodeGroup
http://blog.csdn.net/niko_ke/article/details/53883146
http://likesky3.iteye.com/blog/2238818
https://github.com/macctown/leetcode/blob/master/src/leetcode/FlattenBT.java  // good solutions of leetcode
https://tenderleo.gitbooks.io/leetcode-solutions-/content/GoogleMedium/47.html
https://tenderleo.gitbooks.io/leetcode-solutions-/content/GoogleMedium/398.html // nice
https://github.com/royalpranjal/Interview-Bit
https://github.com/nagajyothi/InterviewBit
http://pidanic.com/en/hackerrank/
https://github.com/rshaghoulian/HackerRank_solutions
https://github.com/charles-wangkai?tab=repositories
https://discuss.codechef.com/questions/48877/data-structures-and-algorithms
https://github.com/gnijuohz/leetcode-best-answers/tree/master/forum /// best best best
https://codegist.in/category/algorithms/dynamic-programming
http://codeforces.com/submissions/Pimpom/page/2
https://visualgo.net/en/mvc
https://gist.github.com/anil477?page=6
https://algorithm.yuanbin.me/zh-hans/basics_algorithm/bitmap.html
https://robinliu.gitbooks.io/algorithms/content/topological_sort.html
http://blog.csdn.net/u012288458/article/details/48214155 // dp
http://blog.leanote.com/post/mrazer/%E5%8C%BA%E9%97%B4DP%E6%80%BB%E7%BB%93 // dp
http://mrazer.leanote.com/ // dp
http://blog.csdn.net/liuqiyao_01/article/details/8797438 //dp
http://minzhulou.com/docs/algorithm-exercise/problem_misc/merge_intervals.html
https://jeantimex.gitbooks.io/solve-leetcode-problems/problems/Max%20Sum%20of%20Rectangle%20No%20Larger%20Than%20K.html
http://blog.csdn.net/u012288458/article/category/5958719 // dp
https://protegejj.gitbooks.io/my-algorithm-summary/content/chapter1/bipartite-graph/check-bipartite-graph.html
http://minzhulou.com/docs/algorithm-exercise/problem_misc/nuts_and_bolts_problem.html
http://lixinzhang.github.io/categories.html
http://blog.csdn.net/liuqiyao_01/article/details/8797438
http://wiki.gyh.me/DP/%E9%9B%86%E5%90%88dp/
http://massivealgorithms.blogspot.in/2017/05/algorithm-dynamic-programming.html
https://pobenliu.gitbooks.io/leetcode/Triangle.html
http://renfengliu.github.io/archives/
https://bytesflow.wordpress.com/2013/01/01/array-partition-from-quick-sort-to-dutch-flag-problem/
http://buttercola.blogspot.in/2016/06/leetcode-341-flatten-nested-list.html
https://codesolutiony.wordpress.com/2015/05/26/lintcode-maximum-subarray-iii/
https://pobenliu.gitbooks.io/leetcode/Maximum%20Product%20Subarray.html
https://codesolutiony.wordpress.com/2015/05/17/leetcode-course-schedule-ii/
http://leancodingnow.com/maximum-subarray-difference/
http://codeanytime.blogspot.in/2014/12/median-ii.html
https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/
http://www.tangjikai.com/algorithms/leetcode-binary-search
https://www.kancloud.cn/kancloud/data-structure-and-algorithm-notes/73105
https://github.com/cormacpayne/Data-Structures-and-Algorithms/blob/master/Notes/Graph-Theory.md
http://codeanytime.blogspot.in/2014/12/median-ii.html
https://github.com/kartikkukreja/blog-codes/blob/master/src/Running%20Median.java
https://kartikkukreja.wordpress.com/2013/05/28/indexed-min-priority-queue-c-implementation/
https://lefttree.gitbooks.io/leetcode/greedy/candy.html
http://minzhulou.com/docs/algorithm-exercise/math_and_bit_manipulation/ugly_number.html
http://renfengliu.github.io/2016/02/08/Maximum-Minimum-Subarray-I-II-III/
https://zhengyang2015.gitbooks.io/lintcode/remove_duplicates_from_sorted_array_100.html
http://yucoding.blogspot.in/2012/12/leetcode-question-16-combination-sum.html
http://lixinzhang.github.io/shan-chu-kge-shu-zi-shi-sheng-xia-de-shu-zi-chuan-zui-da-hulumian-shi-ti.html
http://lixinzhang.github.io/jiu-zhang-suan-fa-mian-shi-ti-zong-jie.html
http://massivealgorithms.blogspot.in/search?q=fence+paint
http://lixinzhang.github.io/qu-jian-xing-dp.html
http://lixinzhang.github.io/dp-palindrome-partitioning-ii.html
http://lixinzhang.github.io/dp-gua-hao-pi-pei-wang-yi-you-dao-mian-shi-ti.html
http://massivealgorithms.blogspot.in/2017/05/algorithm-dynamic-programming.html
http://blog.csdn.net/liuqiyao_01/article/details/8797438
http://wiki.gyh.me/DP/%E9%9B%86%E5%90%88dp/
https://aaronice.gitbooks.io/lintcode/content/dynamic_programming/coins_in_a_line_iii.html
http://codeforces.com/blog/entry/337
http://algorithms.tutorialhorizon.com/generate-maximum-revenue-by-selling-k-tickets-from-n-windows/
http://praveendhinwacoding.blogspot.in/2013/06/digit-dynamic-programming-problem.html
https://gist.github.com/rioshen/a92004a6223ca9d1bb36
https://gist.github.com/rioshen
https://github.com/rioshen/
http://shirleyisnotageek.blogspot.in/2014/12/populating-next-right-pointers-in-each.html
https://github.com/shirleyyoung0812?page=1&tab=repositories
https://github.com/WeizhengZhou/leetcode3/tree/master/src/zz
http://massivetechinterview.blogspot.in/2015/06/algorithm-how-to-count-number-of.html
http://massivetechinterview.blogspot.in/2017/08/cassandra-part-2.html // must
http://algs4.cs.princeton.edu/41graph/BreadthFirstPaths.java.html
http://massivetechinterview.blogspot.in/search/label/Concurrency
https://tenderleo.gitbooks.io/leetcode-solutions-/content/GoogleMedium/362.html
https://github.com/yuzhangcmu
https://www.kancloud.cn/kancloud/data-structure-and-algorithm-notes/73102
https://leetcodenotes.wordpress.com/category/leetcode/page/8/
http://leetcodesummary.blogspot.in/2013/09/leetcode-dfs.html
http://yishafang.blogspot.in/2015/04/interleaving-string.html // she is excellent
https://www.zybuluo.com/smilence/note/76
http://www.raychase.net/3044#implement-trie-prefix-tree
https://soulmachine.gitbooks.io/algorithm-essentials/content/java/java-collection.html
https://www.gitbook.com/book/soulmachine/system-design/details
https://soulmachine.gitbooks.io/algorithm-essentials/content/java/simulation/reverse-integer.html

best lintcode

https://zhengyang2015.gitbooks.io/lintcode/clone_graph_137.html
https://zhengyang2015.gitbooks.io/lintcode/implement_trie_442.html
https://gist.github.com/rioshen/a92004a6223ca9d1bb36


trie tree
https://vkroz.wordpress.com/tag/search/
http://www.puncsky.com/blog/2016/02/14/crack-the-system-design-interview/
https://dzone.com/articles/concurrency-pattern-producer
http://blog.catchpoint.com/2010/09/17/anatomyhttp/
https://www.quora.com/How-do-I-figure-out-how-to-iterate-over-the-parameters-and-write-bottom-up-solutions-to-dynamic-programming-related-problems/answer/Michal-Danil%C3%A1k?srid=3OBi&share=1
https://www.youtube.com/watch?v=Fyol4uw5qhs
https://bruceoutdoors.wordpress.com/tag/codeforces/
https://github.com/hkirat/Algorithmic-Resources/blob/master/README.md#dynamic-programming
https://rwang23.gitbooks.io/lintcodebook/content/DataStructureProblem/Implement-Trie.html
https://tenderleo.gitbooks.io/leetcode-solutions-/content/GoogleMedium/370.html
https://github.com/kamyu104/LintCode#dynamic-programming
http://graphics.stanford.edu/~seander/bithacks.html
http://www.stoimen.com/blog/ // only for visual algorithm
http://blueocean-penn.blogspot.in/
http://karmaandcoding.blogspot.in/2012/01/graph-to-tree-conversion-and-diameter.html
https://miafish.wordpress.com/ //really nice
http://www.8bitavenue.com/2010/12/playing-cards-four-of-a-kind/
http://www.hawstein.com/posts/ctci-solutions-contents.html
http://blog.csdn.net/kenden23/article/category/2291233
http://blog.csdn.net/morewindows/article/details/7354571
http://www.cnblogs.com/chkkch/tag/DP/ // Must very simple and easy
https://robinliu.gitbooks.io/algorithms/content/shuang_xu_lie_xing.html
http://renfengliu.github.io/2016/02/07/Heap-Related-Problems/
http://buttercola.blogspot.in/search/label/Data%20structure%20and%20algorithm?updated-max=2014-12-12T14:46:00-08:00&max-results=20&start=12&by-date=false
http://lifexplorer.me/leetcode-palindrome-partitioning/
https://robinliu.gitbooks.io/algorithms/content/breadth_first_search.html
http://likemyblogger.blogspot.in/2016/08/leetcode-357-count-numbers-with-unique.html
https://kartikkukreja.wordpress.com/2014/11/09/a-simple-approach-to-segment-trees/
https://github.com/kartikkukreja/blog-codes/blob/master/src/Water%20Jug%20Problem%20With%20BFS.cpp
https://github.com/interviewcoder/leetcode // clear thoughts
https://gist.github.com/rioshen/a92004a6223ca9d1bb36
http://tutorials.jenkov.com/java-concurrency/non-blocking-algorithms.html
https://liuyang89116.gitbooks.io/my-leetcode-book/pai_lie_zu_he_mo_ban.html /// the best
https://discuss.leetcode.com/topic/52542/c-template-for-all-combination-problem-set // best template
https://discuss.leetcode.com/topic/30941/here-is-a-10-line-template-that-can-solve-most-substring-problems/59
https://discuss.leetcode.com/topic/64434/shortest-concise-java-o-n-sliding-window-solution/15

https://discuss.leetcode.com/topic/72901/a-concise-template-for-overlapping-interval-problem/2
https://discuss.leetcode.com/topic/46162/a-general-approach-to-backtracking-questions-in-java-subsets-permutations-combination-sum-palindrome-partioning/9
	https://discuss.leetcode.com/topic/52552/c-template-for-valid-sudoku-sudoku-solver
https://discuss.leetcode.com/topic/65986/c-recursive-dfs-template-for-constructing-binary-tree
https://discuss.leetcode.com/topic/73475/modified-the-sliding-window-template-short-java
https://discuss.leetcode.com/topic/72328/c-use-bfs-topologic-template-standard-and-easy-to-understand
https://discuss.leetcode.com/topic/57596/java-strict-o-n-two-pointer-solution/9
https://discuss.leetcode.com/topic/30941/here-is-a-10-line-template-that-can-solve-most-substring-problems/57
https://discuss.leetcode.com/topic/50315/a-summary-how-to-use-bit-manipulation-to-solve-problems-easily-and-efficiently

http://kaicoding.blogspot.in/2016/08/bfs-summary-leetcode.html
http://kaicoding.blogspot.in/2016/08/twitter-system-design.html
http://kaicoding.blogspot.in/2016/08/union-find-summary-leetcode.html

https://github.com/sherxon/AlgoDS.git
http://www.algosome.com/articles/how-to-sort-large-file.html
https://github.com/awangdev/LintCode


//imp
http://yuanhsh.iteye.com/category/333886

courses

https://www.udemy.com/home/my-courses/learning/?p=1
https://www.dezyre.com/
https://www.edureka.co/apache-spark-scala-training
https://intellipaat.com/

Videos
https://www.youtube.com/channel/UC0RhatS1pyxInC00YKjjBqQ/playlists
https://www.youtube.com/user/saurabhschool
https://www.youtube.com/user/mycodeschool
https://www.youtube.com/channel/UCE35PnPX7EZi8nHSegjMn6Q
https://www.youtube.com/channel/UCwsapfci2p1oDVO4Q2sJOQw
https://www.youtube.com/watch?v=QQsyiNNEp1g
https://www.youtube.com/channel/UCDHkPnEcrEf3B9-isB4jXIw
https://www.youtube.com/watch?v=mVHjzF4qi3Y&index=7&list=PLr7bO3PQtaB98icc2r80iN4Eb4hLNVdUF
https://www.youtube.com/watch?v=b6QhQSnKNSc&list=PLOoXj-_3QvUajbiBU6xuSb838VzkA_qQ_
https://www.youtube.com/watch?v=mxi9ha00k1s&list=PL4Uo9sUm2EZERReJaL3OD6vSh5WgWHyQ6&index=5
https://www.youtube.com/playlist?list=PLHursRsSD348tf828Y17UWjpSyXuJPXUw
https://www.youtube.com/playlist?list=PL_nOWs8S2y-Jku5R80lsRR_kONsWMKcPh
https://www.youtube.com/watch?v=vmp1FdveoJI&index=16&list=PLGvfHSgImk4Y7OGpmM7GlbxnaimMPTvZT
https://www.youtube.com/watch?v=1UZUQho55lY&list=PLemeZalBFxyksl-mluKVrckFX8qgLoLhJ
https://www.youtube.com/channel/UCLApsra6s1A7IrDefL472-g
https://www.youtube.com/channel/UCRPMAqdtSgd0Ipeef7iFsKw
https://www.youtube.com/user/nobody123497
https://www.youtube.com/user/mycodeschool/playlists
https://www.youtube.com/user/tusharroy2525
https://www.youtube.com/user/gtprogrammingteam
https://www.youtube.com/user/codechefofficial
https://www.youtube.com/channel/UCYU6nvKyRYnE5kiG9JXkXpA
https://www.youtube.com/user/acmicpcamrita
https://www.youtube.com/playlist?list=PLDV1Zeh2NRsB_qrMScWu9VcsXXP4A36xM
https://www.youtube.com/user/StevenSkiena
https://www.youtube.com/channel/UCD8yeTczadqdARzQUp29PJw
https://www.youtube.com/watch?v=as1f6PJmbAE&t=1342s
https://www.youtube.com/channel/UCraDTFXv7KqO0Eujsyj233w/videos?shelf_id=0&view=0&sort=dd
https://www.youtube.com/watch?v=kKhnYLpME3w
https://www.youtube.com/channel/UCGgX5akKHCMtQhoU8kgvd9w
https://www.youtube.com/channel/UCGgX5akKHCMtQhoU8kgvd9w
https://www.youtube.com/channel/UCBLr7ISa_YDy5qeATupf26w
https://www.youtube.com/results?sp=SBTqAwA%253D&q=dynamic+programming+taught
https://www.youtube.com/watch?v=HlBG2O8ydhw
https://www.youtube.com/channel/UC2xOPGjIhLKsgUZEiunlzWQ/playlists
https://www.youtube.com/user/0zizoo
https://www.youtube.com/user/krispykarim/playlists
https://www.youtube.com/watch?v=P3YID7liBug&index=26&list=PLX6IKgS15Ue02WDPRCmYKuZicQHit9kFt
https://www.youtube.com/channel/UCLApsra6s1A7IrDefL472-g
https://www.youtube.com/watch?v=c0OMPDLef08&list=PLNmW52ef0uwsjnM06LweaYEZr-wjPKBnj
https://www.youtube.com/watch?v=AfVbJDr-8ic
https://www.youtube.com/watch?v=rSHXanQaSQs
https://www.youtube.com/watch?v=51KeZazThyI&list=PLTZbNwgO5ebr1O4i3CI9XHLJmiKBRRZsL
https://www.youtube.com/channel/UCOcmcMwfnJXZTVrCZQSBAbA
https://www.youtube.com/channel/UCyJfwPzs4rDuxFd_Ix5cxBw
https://www.youtube.com/user/kanwarudaysingh/videos?shelf_id=0&view=0&sort=dd
https://www.youtube.com/channel/UCGgX5akKHCMtQhoU8kgvd9w
https://www.youtube.com/channel/UCDoH8kcotvnTpUE5YlgSPtw
https://www.youtube.com/channel/UC5UU8F9yfks_DfXU80T43JA/playlists?view=1&shelf_id=0&sort=dd //
 ALL DP VIDEOS ON THIS LINK
https://www.youtube.com/channel/UC9Gyk36mOzKWPnKd5pfqc2w
https://www.youtube.com/user/rambhaktsharma/videos
https://www.youtube.com/channel/UCIyYdngljsLPMe2HiJ-icPw
https://www.youtube.com/watch?v=0sxuWjANdIs&list=PL07B3F10B48592010&index=16
https://www.youtube.com/watch?v=O3EyzlZxx3g
https://www.youtube.com/channel/UC45TIsMAXTidrCgG7m901gw
https://www.youtube.com/channel/UCUAV4REdf4HtSTlZBtJMk2w
https://www.youtube.com/channel/UCkApI6VTd7eJ8oEPiB9lRjQ
https://www.youtube.com/user/kanwarudaysingh/videos?sort=dd&shelf_id=0&view=0 /// code with videos
https://www.youtube.com/channel/UCEMKtSnkmzO4YKuLE2g0pIQ/videos?sort=dd&shelf_id=0&view=0
https://www.youtube.com/playlist?list=PLeIMaH7i8JDj7DnmO7lll97P1yZjMCpgY
https://www.youtube.com/channel/UCfI3X26yTEcqakFX4PzADjg
https://www.youtube.com/watch?v=keb6rP07Yqg&list=PLRw0YMjLZ5GVmnACPijoa5wCxj8nsRNFr
https://www.youtube.com/watch?v=yAQMcGY4c90
https://www.youtube.com/playlist?list=PLlhDxqlV_-vkak9feCSrnjlrnzzzcopSG
https://www.youtube.com/channel/UCRlDpEgLz9laAQ3lJPK99aA
https://www.youtube.com/watch?v=0Tzp08Z5OIg // not done

DEsign
https://www.youtube.com/playlist?list=PLBB24CFB073F1048E
https://www.youtube.com/channel/UCA3RaMnfSmJsvv3TraOdipg
https://www.youtube.com/watch?v=gJFG04Sy6NY
https://www.youtube.com/user/koushks
http://www.learn4master.com/interview-questions/system-design/system-design-interview-questions
https://www.youtube.com/watch?v=2vtT6TBnOAM
https://www.youtube.com/watch?v=ZgdS0EUmn70
https://www.youtube.com/watch?v=modXC5IWTJI&t=4154s
https://www.youtube.com/watch?v=tQ2V9QSv48M
https://www.youtube.com/watch?v=mDYuJoQEowQ
https://www.youtube.com/watch?v=dkhOZOmV7Fo
https://www.youtube.com/playlist?list=PLT3UNvUM9q7nQl3bOOiLg-MWPpO_LFV09
https://www.youtube.com/playlist?list=PL9E1C52E0720A01D2
https://www.youtube.com/watch?v=-WuW27hpHWc
https://www.youtube.com/watch?v=RsQ1tFLwldY
https://www.cs.umd.edu/class/fall2010/cmsc433/lectures.
http://www.puncsky.com/blog/2016/02/14/crack-the-system-design-interview/
http://massivetechinterview.blogspot.in/search/label/Interview-System%20Design?updated-max=2015-12-08T18:04:00-08:00&max-results=20&start=3&by-date=false
https://github.com/checkcheckzz/system-design-interview
https://www.hiredintech.com/classrooms/system-design/lesson/58
http://www.learn4master.com/interview-questions/system-design/system-design-interview-questions
https://www.youtube.com/watch?v=0s1aVoeF0Gs
https://www.youtube.com/watch?v=gX8S7b8UYl8
https://www.youtube.com/watch?v=UH7wkvcf0ys&list=PL_ODyL-jNdIAbwqJ-_hcrpgqsbeF1dLgt&index=1
http://www.lecloud.net/tagged/scalability
http://highscalability.com/
https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview
https://www.geekyprep.com/design
http://blog.gainlo.co/index.php/2017/04/13/system-design-interviews-part-ii-complete-guide-google-interview-preparation/
https://github.com/checkcheckzz/system-design-interview
https://github.com/mauricio/java-sockets-threads-example
https://github.com/FreemanZhang/java-multithreading
https://github.com/kanastasov/MultithreadingJava
https://github.com/iluwatar/java-design-patterns/tree/master/reader-writer-lock
https://gist.github.com/yclim95/6aa4e8faa7b80f6bff681aa3a36ae596
https://www3.ntu.edu.sg/home/ehchua/programming/#clientSide
https://www.youtube.com/watch?v=0s1aVoeF0Gs
https://www.youtube.com/watch?v=ZgdS0EUmn70&t=827s
https://www.youtube.com/watch?v=mDYuJoQEowQ&t=827s
https://www.youtube.com/watch?v=dkhOZOmV7Fo
https://www.youtube.com/watch?v=4upppuW7lGE
https://www.youtube.com/watch?v=SgEFNRf67Cw&t=2835s
https://www.youtube.com/watch?v=yeyugGZO2qc&t=205s
https://www.youtube.com/channel/UCkApI6VTd7eJ8oEPiB9lRjQ
https://www.youtube.com/watch?v=H2mPbpe_u6M
https://www.youtube.com/channel/UCEMKtSnkmzO4YKuLE2g0pIQ/videos?sort=dd&shelf_id=0&view=0
https://www.youtube.com/channel/UCHBhQ_CfQWRmRTd22YO1mag
http://lifelongprogrammer.blogspot.in/2017/08/how-to-improve-design-skills.html
http://kaicoding.blogspot.in/search/label/System%20Design
https://soulmachine.gitbooks.io/system-design/content/cn/distributed-id-generator.html

http://www.puncsky.com/blog/2016/02/14/crack-the-system-design-interview/
https://gist.github.com/banunatina/3959f128a8c7d20f79807fbccdf2e8bc
lintcode
http://leancodingnow.com/lintcode/
https://github.com/kamyu104/LintCode
http://codenuggets.com/lintcode/
https://zhengyang2015.gitbooks.io/lintcode/regular_expression_matching_154.html
http://blog.csdn.net/nicaishibiantai/article/details/43529037
http://leancodingnow.com/lintcode/
https://github.com/shawnfan/LintCode/tree/master/Java
https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/Expression/
https://coding-interview-solutions.hackingnote.com/problems/max-points-on-a-line.html
http://codenuggets.com/
https://rwang23.gitbooks.io/lintcodebook/content/BinarySearch/Smallest-Rectangle-Enclosing-Black-Pixels.html
https://aaronice.gitbooks.io/lintcode/content/data_structure/rehashing.html
https://zhengyang2015.gitbooks.io/lintcode/stack_sorting_229.html
https://liuyang89116.gitbooks.io/my-leetcode-book/content/binary-tree.html
http://n00tc0d3r.blogspot.in/search?q=flatten
http://codenuggets.com/lintcode/topological-sorting
https://coding-interview-solutions.hackingnote.com/problems/topological-sorting.html
https://pobenliu.gitbooks.io/leetcode/Maximum%20Subarray%20III.html
https://pobenliu.gitbooks.io/leetcode/Construct%20Binary%20Tree%20from%20Preorder%20and%20Inorder%20Traversal.html
https://coldfunction.com/mgen/p/37
https://coldfunction.com/mgen/p/3r

http://readyforsoftwareinterview.blogspot.in/
https://discuss.leetcode.com/topic/51274/one-binarysearch-template-to-ac-all-the-related-problem
https://discuss.leetcode.com/user/caikehe?page=71 // best
https://kartikkukreja.wordpress.com/2016/10/13/problem-of-the-day-median-of-two-sorted-arrays/
https://kennyzhuang.gitbooks.io/algorithms-collection/content/system_design.html
http://www.zrzahid.com/multiply-two-big-integers/
https://yuolivia.wordpress.com/2014/11/17/leetcode-summary-for-binary-search-problems/
https://www.kancloud.cn/kancloud/data-structure-and-algorithm-notes/72997
https://github.com/awangdev/LintCode
https://liuyang89116.gitbooks.io/my-leetcode-book/content/problem_33_search_in_rotated_sorted_array.html
https://coldfunction.com/mgen/p/3d
http://www.sanfoundry.com/java-program-implement-knights-tour-problem/
http://algorithms.tutorialhorizon.com/introduction-to-backtracking-programming/
https://gist.github.com/theronwu7/6266060
https://github.com/ipadthree/9_chapter/blob/master/BFS%20Template
https://github.com/donnemartin/system-design-primer#system-design-topics-start-here
https://github.com/awangdev/LeetCode/tree/master/Java
https://liuyang89116.gitbooks.io/my-leetcode-book/binary-search-and-divide-and-conquer.html
http://www.geometer.org/mathcircles/catalan.pdf
https://qi7.gitbooks.io/clutchcoders/content/Array/lint41.html
http://codercareer.blogspot.in/2011/09/no-06-post-order-traversal-sequences-of.html
https://github.com/haoel/leetcode
https://coding-interview-solutions.hackingnote.com/problems/max-points-on-a-line.html
https://zhengyang2015.gitbooks.io/lintcode/string_permutation_ii_10.
https://github.com/lucifercr07/GFG/blob/master/Heap/almostSorted.cpp
https://coding-interview-solutions.hackingnote.com/problems/max-points-on-a-line.html
https://github.com/rioshen/lintcode-solution/blob/master/java/WordSearchII.java
http://codercareer.blogspot.in/2011/09/no-06-post-order-traversal-sequences-of.html
https://lefttree.gitbooks.io/leetcode/content/unionFind/findConnectedinUG.html
https://adambillylee.gitbooks.io/lintcode/content/chapter2.3.html
https://sunnight.gitbooks.io/leetcode-lintcode/content/Nine%20Chapters/Binary%20Search%20&%20Sorted%20Array.html
https://coding-interview-solutions.hackingnote.com/problems/unique-paths-ii.html
https://sprintz.gitbooks.io/leetcode-lintcode/dfs-problems/leetcode-140-word-break-ii.html
https://algorithm.yuanbin.me/zh-hans/integer_array/median.html
https://adambillylee.gitbooks.io/lintcode/content/chapter2.2.html
https://junnie.gitbooks.io/lintcode-ii/content/384longest-substring-without-repeating-characters.html
https://ethanyu.gitbooks.io/lintcode-leetcode-solutions/content/chapter1/jian-dan-ji-chu-dp/backpack-i/backpack-vi.html
https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/Matrix/MaxPointsOnALine.html
https://rwang23.gitbooks.io/lintcodebook/content/Google/Building-Outline.html
http://praveendhinwacoding.blogspot.in/2013/12/sliding-minimum-problem.html
https://github.com/kdn251/interviews/tree/master/LeetCode
https://github.com/lucifercr07/GFG/blob/master/Heap/almostSorted.cpp


https://www.youtube.com/watch?v=fMZMm_0ZhK4&list=PLShBTTRsAO_T9nIxSWfqIjAU9TFPXGY7g


https://www.amazon.in/Hadoop-Application-Architectures-Real-World-Applications-ebook/dp/B010ORQ8BS/ref=sr_1_2?ie=UTF8&qid=1505249296&sr=8-2&keywords=big+data+architecture
https://www.amazon.in/s/ref=nb_sb_noss?url=search-alias%3Dstripbooks&field-keywords=apache+kafka+design&rh=n%3A976389031%2Ck%3Aapache+kafka+design

https://www.amazon.com/Big-Data-Principles-practices-scalable/dp/1617290343/ref=sr_1_2?s=books&ie=UTF8&qid=1505248834&sr=1-2&keywords=big+data+architecture
https://www.amazon.com/System-Design-Interview-depth-Designers/dp/1975729595/ref=sr_1_2?s=books&ie=UTF8&qid=1505248455&sr=1-2&keywords=system+design+interview

https://www.amazon.com/System-Design-Interview-insiders-guide/dp/1521243972/ref=sr_1_1?s=books&ie=UTF8&qid=1505248455&sr=1-1&keywords=system+design+interview

https://www.amazon.com/collection-System-Design-Interview-Questions/dp/1535078758/ref=sr_1_5?s=books&ie=UTF8&qid=1505248455&sr=1-5&keywords=system+design+interview

https://www.amazon.com/Coding-Interview-Ninja-questions-interview-ebook/dp/B00VCPJ7C4/ref=pd_sim_351_5?_encoding=UTF8&psc=1&refRID=9G79TZ1R0HWMXXGP5BV6

https://www.youtube.com/watch?v=bxvwmeKIXt8&index=4&list=PLNIZo6N8Gh1IF4cuOGDX9pXiQfgk5zUZF
https://www.youtube.com/watch?v=tpspO9K28PM
https://www.youtube.com/watch?v=Y6Ev8GIlbxc
https://www.youtube.com/watch?v=tpspO9K28PM
https://www.youtube.com/watch?v=-Ivhe1afw-0
https://dennis-xlc.gitbooks.io/restful-java-with-jax-rs-2-0-2rd-edition/en/part1/chapter2/designing_restful_services.html
https://calvinlau.gitbooks.io/javakid/Concurrency/locks.html
http://crunchify.com/implement-simple-threadsafe-cache-using-hashmap-without-using-synchronized-collection/
http://crunchify.com/java-concurrentnavigablemap-and-concurrentskiplistmap-example-with-all-details/
http://crunchify.com/what-is-java-semaphore-and-mutex-java-concurrency-multithread-explained-with-example/
http://crunchify.com/java-producer-consumer-example-handle-concurrent-read-write/
http://crunchify.com/what-is-threadsafe-blockingqueue-in-java-and-when-you-should-use-it-implementation-attached/
http://crunchify.com/how-to-run-multiple-threads-concurrently-in-java-executorservice-approach/

http://crunchify.com/java-producer-consumer-example-handle-concurrent-read-write/
http://crunchify.com/what-is-java-semaphore-and-mutex-java-concurrency-multithread-explained-with-example/
https://divyumrastogi.gitbooks.io/system-design/content/the_system_design_primer/index_of_system_design_topics.html#back-pressure
https://soulmachine.gitbooks.io/system-design/content/cn/key-value-store.html
https://fxrcode.gitbooks.io/leetcodenotebook/content/9ChapAdvance/dp.html
https://wxx5433.gitbooks.io/interview-preparation/content/part_i_basics/sort/quick_select.html
https://kennyzhuang.gitbooks.io/leetcode-lock/content/255_verify_preordersequence_in_binary_search_tree.html
https://github.com/Yu1986/HTTPServer
https://www.youtube.com/watch?v=JiVK_tC71L4&list=PLreKEUq80ZVDRM2fDvjIv_E6UBDv25j72&index=20
https://gist.github.com/dougnukem/1241317/4c22f86b0f68945023e1d47070018988644321ab
https://ianna1009.gitbooks.io/leectcode/content/Leetcode%20Problems/Graph/332reconstruct_itinerary.html
https://ianna1009.gitbooks.io/leectcode/content/order_traversal.html
https://lxia.gitbooks.io/summary-of-learning/content/.2_mianjing/random_maze_generator.html
https://shenjc1993.gitbooks.io/leetcode-note/content/leetcode_433_minimum_genetic_mutation.html
https://laveshbhatia.gitbooks.io/lintcode/content/
https://siddontang.gitbooks.io/leetcode-solution/content/array/find_minimum_in_rotated_sorted_array.html

https://edwinzhang.gitbooks.io/-pi-book-introduction-of-java-threads/content/5-share-access-to-data.html
https://kennyzhuang.gitbooks.io/leetcode-lock/content/325_maximum_size_subarray_sum_equals_k.html
https://github.com/Developer-Y/Scalable-Software-Architecturehttp://minzhulou.com/docs/algorithm-exercise/basics_algorithm/divide_and_conquer.html
https://gist.github.com/vasanthk/485d1c25737e8e72759f
https://github.com/Developer-Y/Scalable-Software-Architecture  .. very nice
https://github.com/wxx5433/MapReduce/tree/master/src
https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/DynamicProgram/

https://www.andrew.cmu.edu/course/15-440-f14/applications/ln/P3Recitation.pdf
https://github.com/wxx5433/MapReduce/tree/master/src
https://xmruibi.gitbooks.io/interview-preparation-notes/Algorithm/SegmentTree/SegmentTreeBuild.html

https://shen5630.gitbooks.io/system-design/content/netflix.html
http://minzhulou.com/docs/algorithm-exercise/basics_algorithm/divide_and_conquer.html
https://xinjiema.gitbooks.io/leetcode/content/Array/continuous-subarray-sum.html


46 DP problems
http://www.cppblog.com/doer-xee/archive/2009/12/05/102629.html

https://github.com/Yu1986/HTTPServer
https://robinliu.gitbooks.io/leetcode/content/Sliding%20Window.html
https://shen5630.gitbooks.io/system-design/content/netflix.html
http://minzhulou.com/docs/algorithm-exercise/binary_search_tree/search_range_in_binary_search_tree.html
https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/DynamicProgram/
https://fxrcode.gitbooks.io/leetcodenotebook/content/Misc/acm_info.html
http://codercareer.blogspot.in/2011/09/no-06-post-order-traversal-sequences-of.html
https://github.com/kdn251/interviews/tree/master/LeetCode
https://github.com/haoel/leetcode
https://github.com/shogunsea/lintcode
https://robinliu.gitbooks.io/leetcode/content/Sweep_Line.html


ALL sYSTEM DEISGN VIDEOS
https://github.com/Developer-Y/Scalable-Software-Architecture
https://algo.is/competitive-programming-course/

https://ianna1009.gitbooks.io/leectcode/content/eng_residency_program.html
https://www.gitbook.com/book/shenjc1993/leetcode-note/details
https://shenjc1993.gitbooks.io/leetcode-note/content/leetcode_433_minimum_genetic_mutation.html
https://areveillon.gitbooks.io/data-structures-java/content/
https://lxia.gitbooks.io/summary-of-learning/content/5_shejimoshi/scalability,_availability_&_stability_patterns.html
https://haoyangli.gitbooks.io/leetcode/content/tag_v_----_binary_search_bs-indexbs-result/35_search_insert_position__bs-index__array.html
https://laveshbhatia.gitbooks.io/lintcode/content/
https://edwinzhang.gitbooks.io/-pi-book-introduction-of-java-threads/content/5-share-access-to-data.html
https://siddontang.gitbooks.io/leetcode-solution/content/dynamic_programming/index.html
https://maksimdan.gitbooks.io/data-structures-and-algorithms/content/bloom_filters/implementation.html
https://siddontang.gitbooks.io/leetcode-solution/content/array/find_minimum_in_rotated_sorted_array.html
https://dennis-xlc.gitbooks.io/restful-java-with-jax-rs-2-0-2rd-edition/en/part1/chapter16/apache_http_client.html
https://gist.github.com/kartikkukreja/08fb88a4c55d05a81d37


https://www.youtube.com/watch?v=XQ9QEgLZAcQ&t=350s // best in redis
https://www.youtube.com/watch?v=-N9i-YXoQBE&t=3014s
https://www.youtube.com/watch?v=f2sNgbgw-Fs
http://ninefu.github.io/blog/System_Design_Reading_List/
https://github.com/shashank88/system_design



https://github.com/coding-blocks-archives/Algo_17_Summer_Dwarka/commit/47850e331af86ccb4bee197b40ac89cfaa676c5e
https://www.quora.com/What-are-some-good-questions-on-CodeChef-from-which-I-will-learn-more-algorithms
https://github.com/passionatecoderraj

https://www.quora.com/What-are-some-good-questions-on-CodeChef-from-which-I-will-learn-more-algorithms
https://github.com/passionatecoderraj/dsa




http://www.ovaistariq.net/199/databases-normalization-or-denormalization-which-is-the-better-technique/#.Wcs1FXWGM8o
https://sm-dev.edutone.net/Java/
https://sm-dev.edutone.net/Java%20EE/JSP/Murach.Java.Servlets.and.JSP.2nd.Edition.Jan.2008/Murach.Java.Servlets.and.JSP.2nd.Edition.Jan.2008.pdf
chap 16 17
https://sm-dev.edutone.net/Java%20EE/Professional%20Java%20EE%20Design%20Patterns.pdf chap 15
https://sm-dev.edutone.net/Architect/Microservices%20Flexible%20Software%20Architecture.pdf chap 7
https://sm-dev.edutone.net/Architect/Addison%20Wesley%20-%20Enterprise%20Integration%20Patterns%20-%20Designing,%20Building%20And%20Deploying%20Messaging%20Solutions%20-%20With%20Notes.pdf chapt 1
https://sm-dev.edutone.net/API/RESTful%20Java%20Patterns%20and%20Best%20Practices%20-%20Bhakti%20Mehta.pdf full book
https://sm-dev.edutone.net/API/API%20Management%20An%20Architect's%20Guide%20to%20Developing%20and%20Managing%20APIs%20for%20Your%20Organization.pdf chap 5
 https://sm-dev.edutone.net/Hadoop/Practical%20Hadoop%20Ecosystem.pdf full book

 suffic array :-
 http://p--np.blogspot.in/2011/12/suffix-array.html
 https://algorithmsandme.in/2015/01/26/suffix-array/
 https://www.andrew.cmu.edu/course/15-440-f14/applications/ln/P3Recitation.pdf
 skhttps://shen5630.gitbooks.io/system-design/content/netflix.html

 http://www.cnblogs.com/grandyang/p/4606334.html // leetcode
 https://brandnewlife93.gitbooks.io/hellohello/tag_viiii_stack/255_verify_preorder_sequence_in_binary_search_tree.html // really nice nice

https://jeantimex.gitbooks.io/solve-leetcode-problems/problems/Group%20Shifted%20Strings.html // one of the best that i missed

hyperloglog
http://highscalability.com/blog/2012/4/5/big-data-counting-how-to-count-a-billion-distinct-objects-us.html?currentPage=2
https://my.vertica.com/blog/using-vertica-hyperloglog/
http://antirez.com/news/75

basic
https://github.com/shogunsea/lintcode
System DEisgn

https://www.hackingnote.com/en/interview/system-design-interview-questions/
https://siddharth-ravichandran.com/2011/01/21/multiuser-chat-using-xmpp-and-orbited-using-ruby-on-rails/
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
http://blog.contus.com/how-whatsapp-works-technically-and-how-to-build-an-app-similar-to-it/
http://www.ijcset.com/docs/IJCSET16-07-07-015.pdf
https://engineering.linkedin.com/kafka/benchmarking-apache-kafka-2-million-writes-second-three-cheap-machines
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
https://www.slideshare.net/girish_fingent/realtime-communication-in-mobile-59453532
http://www.tutorialsface.com/2015/08/building-your-own-android-chat-messenger-app-similar-to-whatsapp-using-xmpp-smack-4-1-api-from-scratch-part-2/
https://tsien.gitbooks.io/system-design/content/part-4.html
https://github.com/tschellenbach/Stream-Framework
https://www.gitbook.com/book/soulmachine/system-design/details
https://github.com/sjuvekar/System-Design-Case-Studies/tree/master/studies
https://github.com/yangshun/tech-interview-handbook/tree/master/design
https://shen5630.gitbooks.io/system-design/content/github.html
https://www.hackingnote.com/en/interview/system-design-interview-questions/

https://cseweb.ucsd.edu/classes/sp00/cse202/dyn.pdf
http://blog.codepath.com/2013/01/06/asynchronous-processing-in-web-applications-part-2-developers-need-to-understand-message-queues/

System design
https://www.hackingnote.com/en/interview/system-design-interview-questions/
https://siddharth-ravichandran.com/2011/01/21/multiuser-chat-using-xmpp-and-orbited-using-ruby-on-rails/
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
http://blog.contus.com/how-whatsapp-works-technically-and-how-to-build-an-app-similar-to-it/
http://www.ijcset.com/docs/IJCSET16-07-07-015.pdf
https://engineering.linkedin.com/kafka/benchmarking-apache-kafka-2-million-writes-second-three-cheap-machines
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
https://www.slideshare.net/girish_fingent/realtime-communication-in-mobile-59453532
http://www.tutorialsface.com/2015/08/building-your-own-android-chat-messenger-app-similar-to-whatsapp-using-xmpp-smack-4-1-api-from-scratch-part-2/
https://tsien.gitbooks.io/system-design/content/part-4.html
https://github.com/tschellenbach/Stream-Framework
https://www.gitbook.com/book/soulmachine/system-design/details
https://github.com/sjuvekar/System-Design-Case-Studies/tree/master/studies
https://github.com/yangshun/tech-interview-handbook/tree/master/design
https://shen5630.gitbooks.io/system-design/content/github.html
https://www.hackingnote.com/en/interview/system-design-interview-questions/
https://cseweb.ucsd.edu/classes/sp00/cse202/dyn.pdf
https://github.com/yangshun/tech-interview-handbook/tree/master/design
https://github.com/vaquarkhan/vaquarkhan
https://www.youtube.com/watch?v=ybHNQoiCNvY
https://dowshawu.gitbooks.io/interview/content/knowledge/sorting.html // nice
https://www.youtube.com/watch?v=W94M9D_yXKk&index=3&list=PLe-ggMe31CTdBsRIw0hXln0hilRs-DqAx // nice
https://xiaoguan.gitbooks.io/leetcode/LeetCode/14-longest-common-prefix.html // nice nice nice it is
https://sites.google.com/site/jennyshelloworld/company-blog
https://blog.twitter.com/engineering/en_us/topics/infrastructure/2015/building-distributedlog-twitter-s-high-performance-replicated-log-servic.html
https://sites.google.com/site/jennyshelloworld/system/app/pages/subPages?path=/company-blog
 http://www.shuati123.com/blog/2014/06/10/NineChap-Binary-Tree-DFS/ ( the best i have got til lnot
 https://jingjingshao.gitbooks.io/data-structure-and-algorithm-analysis/content/Nine%20Chapter/high%20frequency/code.html)
 https://shanzi.gitbooks.io/algorithm-notes/problem_solutions/the_skyline_problem.html

Design logger
Design parking lot
Design elevator
Design twitter
Design whatsapp
Design superstore

https://github.com/xuebaofeng/baofeng.tools
 ls -lts imlment in java .. Use callable and Future .. Read abt reader writers problem

 1) Ms :- Inversioncount LRU cache
 2) Edit distance
 3)+ - .. maximum value
 4)System deisgn :- bookmyshow
 5)Yelp
 6)1 2 3 sort dutch national flag
 7) Trie
 https://hzhou.me/LeetCode/
 https://xiaoguan.gitbooks.io/leetcode/LeetCode/267-palindrome-permutation-ii-medium.html
 https://dowshawu.gitbooks.io/interview/content/difficult_problems/remove_invalid_parentheses.html
 https://github.com/FreemanZhang/leetcode for design
 http://www.shuati123.com/blog/2014/06/10/NineChap-Binary-Tree-DFS/
 https://discuss.leetcode.com/topic/68976/sliding-window-algorithm-template-to-solve-all-the-leetcode-substring-search-problem
 https://fxrcode.gitbooks.io/leetcodenotebook/content/Leetcode_Easy/balanced_binary_tree.html



 https://github.com/Turingfly/leetcode#dynamic-programming /// THE BEST 450 problems solved on leetcode the next milestore
 https://github.com/lydxlx1/LeetCode
 https://mapr.com/blog/performance-tuning-kafka-spark-streaming-telecom/
 https://pureklkl.gitbooks.io/leetcode-lintcode/content/leetcode/85.%20Maximal%20Rectangle.html
 https://github.com/gouthampradhan/leetcode/tree/master/problems/src
 https://siddontang.gitbooks.io/leetcode-solution/content/backtracking/subsets.html
 https://github.com/ept/newsfeed
 https://chienchikao.blogspot.in/
https://github.com/coolthluo/LeetCode // changed everything
https://sookocheff.com/post/thrift/so-you-want-to-use-thrift/
https://miafish.wordpress.com/category/algorithm/array-algorithm/ // short and sweet
https://jiaowenlan.gitbooks.io/leetcode-questions/content/movezeroes_mde.html  // short and sweet
https://github.com/lydxlx1/LeetCode/tree/master/src





https://www.gitbook.com/@wxx5433
https://github.com/wxx5433?tab=repositories
https://wxx5433.gitbooks.io/interview-preparation/content/index.html
skhttps://shen5630.gitbooks.io/system-design/content/netflix.html
https://dennis-xlc.gitbooks.io/restful-java-with-jax-rs-2-0-2rd-edition/en/part2/chapter18/build_and_run_the_example_program.html




https://www.hiredintech.com/courses/system-design
https://imgur.com/a/Jr0NH
http://massivetechinterview.blogspot.in/2015/06/system-design-for-big-data-consistent.html
http://www.geeksforgeeks.org/how-to-design-a-tiny-url-or-url-shortener/
http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism
http://massivetechinterview.blogspot.in/2016/01/http-api-design-guide.html
https://dzone.com/refcardz/getting-started-with-mqtt
http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html
http://massivetechinterview.blogspot.in/2015/07/design-chat-server-hello-world.html
http://blog.gainlo.co/index.php/2016/03/29/design-news-feed-system-part-1-system-design-interview-questions/
http://blog.gainlo.co/index.php/2016/02/17/system-design-interview-question-how-to-design-twitter-part-1/



https://github.com/zxqiu/leetcode-lintcode
https://zhengyang2015.gitbooks.io/lintcode/count_of_smaller_number_before_itself_249.html
https://read.amazon.in/
http://massivetechinterview.blogspot.in/2015/06/system-design-for-big-data-consistent.html



https://docs.google.com/document/d/1xBpRMT3JnB8aiX3Ol1RGc-lYIFhndCPsDKoVCBptgcI/edit?ts=56b2d5c3#heading=h.h202cbginl2a
http://hadoop.training4exam.com/
https://docs.google.com/spreadsheets/d/1OA_9mZO_aijQ0oR590gAjtwq2QXjVUixs0T28NmU-NA/edit#gid=826329877



https://kennyzhuang.gitbooks.io/algorithms-collection/content/dynamic_programming_collection.html
https://aaronice.gitbooks.io/lintcode/content/trie/word_search_ii.html
https://zhengyang2015.gitbooks.io/lintcode/segment_tree_build_201.html
https://lefttree.gitbooks.io/leetcode/dynamicProgramming2/minimumAdjustmentCost.html
https://soulmachine.gitbooks.io/system-design/content/cn/bigdata/range-query.html
https://jingjingshao.gitbooks.io/data-structure-and-algorithm-analysis/content/.String/14%20Longest%20Common%20Prefix_String.html
https://rahulravindran0108.gitbooks.io/leetcode-gitbook/dp/combination_sum_4.html
https://tenderleo.gitbooks.io/leetcode-solutions-/content/GoogleMedium/47.html
https://robinliu.gitbooks.io/algorithms/content/dan_xu_lie_xing.html
https://protegejj.gitbooks.io/my-algorithm-summary/content/chapter1/bipartite-graph/check-bipartite-graph.html
https://jeantimex.gitbooks.io/solve-leetcode-problems/problems/Max%20Sum%20of%20Rectangle%20No%20Larger%20Than%20K.html
https://pobenliu.gitbooks.io/leetcode/Triangle.html
https://www.kancloud.cn/kancloud/data-structure-and-algorithm-notes/72921
https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/BinarySearch/CountSmallerNumber.html
https://rwang23.gitbooks.io/lintcodebook/content/BinarySearch/Smallest-Rectangle-Enclosing-Black-Pixels.html
https://shenjc1993.gitbooks.io/leetcode-note/content/leetcode_149_max_points_on_a_line.html
https://github.com/liuyang89116
https://liuyang89116.gitbooks.io/my-leetcode-book/content/chapter_6_graph_&_search.html

https://adambillylee.gitbooks.io/lintcode/content/chapter1.2.html
https://sunnight.gitbooks.io/leetcode-lintcode/content/Nine%20Chapters/Binary%20Search%20&%20Sorted%20Array.html
https://sprintz.gitbooks.io/leetcode-lintcode/dfs-problems/leetcode-140-word-break-ii.html
https://coding-interview-solutions.hackingnote.com/problems/unique-paths-ii.html
https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/Matrix/MaxPointsOnALine.html
https://junnie.gitbooks.io/lintcode-ii/content/384longest-substring-without-repeating-characters.html
https://ethanyu.gitbooks.io/lintcode-leetcode-solutions/content/chapter1/jian-dan-ji-chu-dp/backpack-i/backpack-i.html

https://xmruibi.gitbooks.io/interview-preparation-notes/content/Algorithm/Matrix/MaxPointsOnALine.html
https://fxrcode.gitbooks.io/leetcodenotebook/content/Misc/mian_shi_ti_mu_zong_jie_zhuan_zai.html
https://soulmachine.gitbooks.io/algorithm-essentials/java/simulation/multiply-strings.html
https://wxx5433.gitbooks.io/interview-preparation/content/part_ii_leetcode_lintcode/segment_tree/count_of_smaller_number.html
https://wxx5433.gitbooks.io/interview-preparation/content/part_ii_leetcode_lintcode/two_pointers/3_sum.html
https://ianna1009.gitbooks.io/leectcode/content/two-pointer_technique.html
https://xmruibi.gitbooks.io/interview-preparation-notes/Algorithm/SegmentTree/SegmentTreeBuild.html
https://xmruibi.gitbooks.io/interview-preparation-notes/Algorithm/SegmentTree/SegmentTreeBuild.html
https://github.com/wxx5433
https://wxx5433.gitbooks.io/interview-preparation/content/part_ii_leetcode_lintcode/two_pointers/3_sum.html

https://www.codechef.com/certification/prepare#foundation
http://bulldog2011.github.io/blog/2013/03/27/the-architecture-and-design-of-a-pub-sub-messaging-system/

suffix array :-
http://p--np.blogspot.in/2011/12/suffix-array.html
dp
https://cseweb.ucsd.edu/classes/sp00/cse202/dyn.pdf
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
https://www.quora.com/What-is-WhatsApps-server-architecture
https://lxia.gitbooks.io/summary-of-learning/content/books/system_design_and_scalability.html

https://sindwerra.gitbooks.io/algorithm-data-structure/stack/largest-rectangle-in-histogram.html

https://lxia.gitbooks.io/summary-of-learning/content/5_shejimoshi/bigtable_a_distributed_storage_system_for_structur.html
http://www.jiuzhang.com/media/session/SystemDesign_2_20151121.pdf


https://github.com/coolthluo/LeetCode/commits/master
http://www.javamadesoeasy.com/search/label/Serialization

https://github.com/hn3000/rate-limiter-java/blob/develop/src/main/java/de/niesche/commons/ratelimiter/RateLimiterTokenBucket.java
https://xmruibi.gitbooks.io/interview-preparation-notes/content/
https://lxia.gitbooks.io/summary-of-learning/content/5_shejimoshi/bigtable_a_distributed_storage_system_for_structur.html


https://shanzi.gitbooks.io/algorithm-notes/problem_solutions/substring_with_concatenation_of_all_words.html
https://medium.com/netflix-techblog/distributed-delay-queues-based-on-dynomite-6b31eca37fbc
https://www.lucidchart.com/pages/class-diagram-for-hotel-management-system-UML
http://k2code.blogspot.in/search/label/object-oriented-design%20%2F%20OOD /// MUST MUST MUST
http://highscalability.com/product-scribe-facebooks-scalable-logging-system
https://blog.twitter.com/engineering/en_us/topics/infrastructure/2015/building-distributedlog-twitter-s-high-performance-replicated-log-servic.html




DESIGN :-



https://www.hackingnote.com/en/interview/system-design-interview-questions/
https://siddharth-ravichandran.com/2011/01/21/multiuser-chat-using-xmpp-and-orbited-using-ruby-on-rails/
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
http://blog.contus.com/how-whatsapp-works-technically-and-how-to-build-an-app-similar-to-it/
http://www.ijcset.com/docs/IJCSET16-07-07-015.pdf
https://engineering.linkedin.com/kafka/benchmarking-apache-kafka-2-million-writes-second-three-cheap-machines
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response
https://www.slideshare.net/girish_fingent/realtime-communication-in-mobile-59453532
http://www.tutorialsface.com/2015/08/building-your-own-android-chat-messenger-app-similar-to-whatsapp-using-xmpp-smack-4-1-api-from-scratch-part-2/
https://tsien.gitbooks.io/system-design/content/part-4.html
https://github.com/tschellenbach/Stream-Framework
https://www.gitbook.com/book/soulmachine/system-design/details
https://github.com/sjuvekar/System-Design-Case-Studies/tree/master/studies
https://github.com/yangshun/tech-interview-handbook/tree/master/design
https://shen5630.gitbooks.io/system-design/content/github.html
https://www.hackingnote.com/en/interview/system-design-interview-questions/
https://cseweb.ucsd.edu/classes/sp00/cse202/dyn.pdf





WHatsApp
https://www.quora.com/What-is-WhatsApps-server-architecture
https://www.quora.com/WhatsApp-Messenger/How-long-does-WhatsApp-keep-the-delivered-data-like-images-etc-in-the-server/answer/Michael-Donohue?share=1&srid=XAWy
https://www.quora.com/How-does-messaging-work-in-WhatsApp-Is-this-the-right-approach-for-communication-between-client-and-server-Is-the-client-always-connected-to-the-internet-when-waiting-for-a-response

Kafka deisgn

http://bulldog2011.github.io/blog/2013/03/27/the-architecture-and-design-of-a-pub-sub-messaging-system/
https://www.packtpub.com/mapt/book/big_data_and_business_intelligence/9781782166627/1/ch01lvl1sec16/using-the-thrift-protocol


One of the important aspects of building micro-services towards implementing Service Oriented Architecture (SOA) is to design how these services communicate. HTTP is a common choice, you can just create RESTful endpoints for your service with JSON as the serialization. The advantage of this is that most of are already familiar to most developers so they’re very trivial to implement.

However there are times when HTTP just isn’t enough, when you don’t need the extra overhead of HTTP or a more compact serialization than JSON. And that’s where Thrift comes in, its basically an RPC server with built-in binary serialization. So your services communicates via RPC with the messages in binary form which has the advantage of faster and smaller payload. And not only that, your services can be written in any language supported by Thrift and still communicate between each other.

Pheuw! now that’s out of the way, lets look at how to use it. First we need to create a thrift file which defines our services, types, etc. We’re going to create a sample phonebook service so lets create the following file:

// contact.thrift

http://code.flickr.net/2012/12/12/highly-available-real-time-notifications/
https://www.quora.com/What-are-the-advantages-of-Kafka-over-Redis-for-pub-sub
https://www.packtpub.com/mapt/book/big_data_and_business_intelligence/9781782166627/1/ch01lvl1sec16/using-the-thrift-protocol


Best
http://bulldog2011.github.io/blog/2013/01/27/thrift-queue/
http://bulldog2011.github.io/blog/2013/01/23/big-queue-design/
http://javapapers.com/java/java-nio-buffer/
https://tutorials.techmytalk.com/2014/11/05/java-nio-memory-mapped-files/


https://docs.google.com/document/d/1dNKjHICogW5f94MKoBr8wDA3TASbhP0nrcy4eKiuA8Q/edit#
http://www.puncsky.com/blog/2016/02/14/crack-the-system-design-interview/
https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/
https://highlyscalable.wordpress.com/

https://docs.google.com/document/d/1dNKjHICogW5f94MKoBr8wDA3TASbhP0nrcy4eKiuA8Q/edit#heading=h.2o2elwi48bzl
http://www.puncsky.com/blog/2016/02/14/crack-the-system-design-interview/
http://www.ebaytechblog.com/2012/07/16/cassandra-data-modeling-best-practices-part-1/
https://github.com/zxqiu/leetcode-lintcode/blob/master/system%20design/Consistent_Hashing.java

https://www.javacodegeeks.com/2015/12/docker-java-application-with-solr-mongo-cassandra.html

https://www.slideshare.net/edwardcapriolo/nibiru-building-your-own-nosql-store-57438624
http://codecapsule.com/2012/11/07/ikvs-implementing-a-key-value-store-table-of-contents/
https://gist.github.com/jboner/2841832
https://www.guru99.com/cassandra-collections-tutorial-set-list-map.html
https://www.guru99.com/hbase-architecture-data-flow-usecases.html

http://codecapsule.com/2012/11/07/ikvs-implementing-a-key-value-store-table-of-contents/
https://github.com/abhirockzz/websocket-chat/tree/master/src/main/java/io/gitbooks/abhirockzz/jwah/chat

https://docs.google.com/spreadsheets/d/1OA_9mZO_aijQ0oR590gAjtwq2QXjVUixs0T28NmU-NA/edit#gid=0
https://shen5630.gitbooks.io/system-design/content/chapter1.html
http://prismoskills.appspot.com/lessons/System_Design_and_Big_Data/Chapter_12_-_RabbitMQ_vs_Kafka.jsp
http://systemdesigns.blogspot.in/2015/12/design-uber.html
http://www.geeksforgeeks.org/count-distinct-substrings-string-using-suffix-array/
http://systemdesigns.blogspot.in/2015/12/top-k-requests-during-past-time-interval.html
http://blog.csdn.net/v_JULY_v/article/details/6839360
http://blog.csdn.net/v_JULY_v/article/details/6689489
https://siddharth-ravichandran.com/2011/01/21/multiuser-chat-using-xmpp-and-orbited-using-ruby-on-rails/
http://zxi.mytechroad.com/blog/2017/10/
https://www.hiredintech.com/classrooms/system-design/lesson/67
https://datasketches.github.io/docs/Theta/KMVrejection.html
https://nickcraver.com/blog/2016/02/17/stack-overflow-the-architecture-2016-edition/


https://github.com/FreemanZhang/system-design
https://gist.github.com/vasanthk/485d1c25737e8e72759f
https://github.com/shashank88/system_design
https://jeantimex.gitbooks.io/solve-leetcode-problems/content/problems/Count%20of%20Smaller%20Numbers%20After%20Self.html
https://jeantimex.gitbooks.io/solve-leetcode-problems/content/problems/Serialize%20and%20Deserialize%20Binary%20Tree.html
https://github.com/stefanvanwouw/spark-based-trending-topics-extraction


https://github.com/vaquarkhan/vaquarkhan






